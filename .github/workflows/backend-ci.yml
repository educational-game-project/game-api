name: backend update
on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
      - backend

jobs:
  build-image:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '#build') }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Short SHA
        id: vars
        shell: bash
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - id: qemu
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - id: auth
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - id: build
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          # context: .
          push: true
          tags: iwansuryaningrat/game-api:game-${{ env.COMMIT_SHORT_SHA }}

  Deploy-to-VM:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Short SHA
        id: vars
        shell: bash
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Deploy in VM
        env:
          PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          HOSTNAME: ${{ secrets.VM_HOST }}
          USER_NAME: ${{ secrets.VM_USERNAME }}
          port: ${{ secrets.VM_PORT }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          SHORT_SHA: ${{ env.COMMIT_SHORT_SHA }}
          # passphrase: ${{ secrets.SSH_PASSPHRASE }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME}  '
            cd /home/${{ secrets.VM_USERNAME }}/game &&
            ls -al &&
            echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin &&
            docker pull iwansuryaningrat/game-api:game-${{ env.COMMIT_SHORT_SHA }} &&
            docker tag iwansuryaningrat/game-api:game-${{ env.COMMIT_SHORT_SHA }} iwansuryaningrat/game-api:game
            docker compose up -d &&
            docker image prune --force
            '
