name: Deploy backend

on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
      - backend

jobs:
  # build-image:
  #   runs-on: ubuntu-latest
  #   if: ${{ contains(github.event.head_commit.message, '#build') }}
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3

  #     - name: Get Short SHA
  #       id: vars
  #       shell: bash
  #       run: |
  #         calculatedSha=$(git rev-parse --short ${{ github.sha }})
  #         echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

  #     - id: qemu
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - id: buildx
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - id: auth
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - id: build
  #       name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         # context: .
  #         push: true
  #         tags: iwansuryaningrat/game-api:game-${{ env.COMMIT_SHORT_SHA }}
  # - id: build
  #   name: Build and push skripsi image
  #   uses: docker/build-push-action@v5
  #   with:
  #     # context: .
  #     push: true
  #     tags: iwansuryaningrat/game-api:game-skripsi

  Deploy-to-VM:
    runs-on: ubuntu-latest
    # needs: build-image
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # - name: Get Short SHA
      #   id: vars
      #   shell: bash
      #   run: |
      #     calculatedSha=$(git rev-parse --short ${{ github.sha }})
      #     echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      # - name: Set up SSH
      #   uses: webfactory/ssh-agent@v0.5.3
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Add remote host to known_hosts
      #   run: |
      #     # mkdir -p ~/.ssh
      #     ssh-keyscan -H ${{ secrets.OFFICE_IP }} >> ~/.ssh/known_hosts

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key

      - name: Deploy in VM
        env:
          HOSTNAME: ${{ secrets.VM_HOST }}
          USER_NAME: ${{ secrets.VM_USERNAME }}
          OFFICE_IP: ${{ secrets.OFFICE_IP }}
          OFFICE_PORT: ${{ secrets.OFFICE_PORT }}
          OFFICE_USER: ${{ secrets.OFFICE_USER }}

        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/private_key $OFFICE_USER@$OFFICE_IP -p ${OFFICE_PORT} '
            ssh ${USER_NAME}@${HOSTNAME} './deploy-game.sh'
          '
